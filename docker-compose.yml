version: "3.7"
services:

  nginx:
    image: nginx:1.17
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8000:80
    depends_on:
      - backend
      - frontend
  
  redis:
    image: redis
    container_name: redis
    ports:
      - 6379:6379
  
  worker:
    build:
      context: backend
      dockerfile: Dockerfile
    image: worker
    container_name: worker
    command: celery --app app.worker.tasks worker --loglevel=DEBUG -Q main-queue -c 1
    environment:
      ELASTIC_CLOUD_ID: ${ELASTIC_CLOUD_ID}
      CELERY_BROKER_URL: redis://redis
      CELERY_RESULT_BACKEND: redis://redis
      RAY_ADDRESS: ${RAY_ADDRESS}
      GIT_ACCESS_TOKEN: ${GIT_ACCESS_TOKEN}
    depends_on:
      - redis  
    networks:
      - default

  flower:  
    image: mher/flower
    command: celery flower --broker=redis://redis:6379/0 --port=5555
    container_name: worker-monitor
    ports:  
        - 5555:5555
    environment:
      CELERY_BROKER_URL: redis://redis
      CELERY_RESULT_BACKEND: redis://redis
    depends_on:
      - "redis"
      - "worker"

  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
    image: frontend
    container_name: frontend
    stdin_open: true
    ports:
      - "3000:3000"
    volumes:
      - './frontend:/app:cached'
      - './frontend/node_modules:/app/node_modules:cached'
    environment:
      - NODE_ENV=development

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    image: backend
    container_name: backend
    command: python app/main.py
    ports:
      - "8888:8888"
    environment:
      PYTHONPATH: .
      ELASTIC_CLOUD_ID: ${ELASTIC_CLOUD_ID}
      KIBANA_URL: ${KIBANA_URL}
      GIT_ACCESS_TOKEN: ${GIT_ACCESS_TOKEN}
    networks:
      - default